name: Docker Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  CONTAINER_REGISTRY: docker.io
  IMAGE_NAME: portfolio-site

concurrency:
  group: workflow-${{ github.ref }}
  cancel-in-progress: true

jobs:
  docker:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    strategy:
      matrix:
        tag: [latest, v1, dev]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        timeout-minutes: 2

      - name: Docker Login
        uses: docker/login-action@v2
        timeout-minutes: 3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Docker Build
        timeout-minutes: 10
        run: docker build -t ${{ env.CONTAINER_REGISTRY }}/${{ vars.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ matrix.tag }} .

      - name: Docker Publish
        timeout-minutes: 5
        run: docker push ${{ env.CONTAINER_REGISTRY }}/${{ vars.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ matrix.tag }}

  deploy:
    needs: docker
    if: ${{ !contains(needs.docker.result, 'failure') }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    concurrency:
      group: production-deployment
      cancel-in-progress: true

    steps:
      - name: Docker Login
        uses: docker/login-action@v2
        timeout-minutes: 3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Deploy Notification
        timeout-minutes: 1
        run: echo "Docker image has been successfully published. Ready for deployment to production server."
